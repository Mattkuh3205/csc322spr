import * as THREE from "https://unpkg.com/three@0.126.1/build/three.module.js"

// import Orbit controls
import { OrbitControls } from 'https://cdn.jsdelivr.net/npm/three@0.121.1/examples/jsm/controls/OrbitControls.js';

const renderer = new THREE.WebGLRenderer();
renderer.setSize( window.innerWidth, window.innerHeight );
document.body.appendChild( renderer.domElement );

const camera = new THREE.PerspectiveCamera( 90, window.innerWidth / window.innerHeight, 1, 500 );
camera.position.set( 0, 0, 100 );
camera.lookAt( 0, 0, 0 );

const material = new THREE.LineBasicMaterial( { color: 0xFFFFFF } );

const scene = new THREE.Scene();

const points = [];
points.push( new THREE.Vector3(-15, 0, 0 ) );
points.push( new THREE.Vector3( 0, 20, 0 ) );
points.push( new THREE.Vector3( 20, 0, -20 ) );
points.push( new THREE.Vector4( -15, 0, 0 ) );




points.push( new THREE.Vector3(0, 20, 0 ) );
points.push( new THREE.Vector3( 0, 20, 0 ) );
points.push( new THREE.Vector3( 20, 0, 20 ) );
points.push( new THREE.Vector3(20, 0, -20 ) );
points.push( new THREE.Vector4( -15, 0, 0 ) );
points.push( new THREE.Vector3(20, 0, 20 ) );

const geometry = new THREE.BufferGeometry().setFromPoints( points );
const line = new THREE.Line( geometry, material );

scene.add( line );

renderer.render( scene, camera );

function animate() {
  renderer.render(scene, camera)
  
  requestAnimationFrame(animate);
  }

var controls = new OrbitControls (camera, renderer.domElement);


animate();


