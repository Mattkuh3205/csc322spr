import * as THREE from "https://unpkg.com/three@0.126.1/build/three.module.js"

const renderer = new THREE.WebGLRenderer()
renderer.setSize(window.innerWidth, window.innerHeight)
document.body.appendChild(renderer.domElement)

const camera = new THREE.PerspectiveCamera(
  45,
  window.innerWidth / window.innerHeight,
  1,
  500,
)
camera.position.set(0, 0, 100)
camera.lookAt(0, 0, 0)

const material = new THREE.LineBasicMaterial({ color: 0xffffff })

const scene = new THREE.Scene()

const points = []
const points1 = []
const points2 = []

points.push(new THREE.Vector3(15, 0, 0))
points.push(new THREE.Vector3(-15, 0, 0))

points1.push(new THREE.Vector3(-15, 0, 0))
points1.push(new THREE.Vector3(0, 20, 0))
points1.push(new THREE.Vector3(15, 0, 5))
points1.push(new THREE.Vector3(30, 15, -25))
points1.push(new THREE.Vector3(0, 35, -75))

const geometry = new THREE.BufferGeometry().setFromPoints(points)
const geometry1 = new THREE.BufferGeometry().setFromPoints(points1)
const geometry2 = new THREE.BufferGeometry().setFromPoints(points2)

const line = new THREE.Line(geometry, material)
const line1 = new THREE.Line(geometry1, material)
const line2 = new THREE.Line(geometry2, material)

scene.add(line)
scene.add(line1)
scene.add(line2)

renderer.render(scene, camera)

function animate() {
  renderer.render(scene, camera)
}
